<!-- Kapitel 4.1 -->
<h3 id="chapter-4-1"><!-- $chapter-4-1 --></h3>
<p>
    Bevor die eigentliche Programmierung von <i>OWLisch</i> näher
    erläutert wird, folgt zunächst ein Überblick über den Fremdcode
    und die Frameworks, die bei der Entwicklung verwendet wurden.

    Im JavaScript-Code innerhalb der App selbst wurde dabei auf
    vier Plugins zurückgegriffen, die alle auf
    <i>GitHub</i><!-- @import footnote-12 --> zur Verfügung stehen und
    unter der <i>MIT</i> Lizenz veröffentlicht wurden:
</p>
<ul>
    <li>
        <code>jQuery</code> <i>von The jQuery Foundation</i>:<br/>
        Hierbei handelt es sich um eine umfangreiche Bibliothek an
        Hilfsfunktionen, die das Manipulieren und Verändern des
        HTML-Dokuments erleichtern und beschleunigen; eine der weltweit
        am häufigsten genutzten JavaScript-Bibliotheken.
    </li>
    <li>
        <code>FastClick</code> <i>von FT Labs</i>:<br/>
        Für gewöhnlich gibt es bei Browsern auf Mobilgeräten eine
        Verzögerung von etwa 300 ms zwischen dem Berühren des Bildschirms
        und dem Ausführen der damit verbundenen Aktion, um zu erkennen,
        ob der Nutzer einen Doppelklick ausführt. <i>FastClick</i> entfernt
        diese Verzögerung, die es bei nativen Apps nicht gibt.
    </li>
    <li>
        <code>jquery-bemhelpers</code> <i>von Max Shirshin</i>:<br/>
        Ein kleines Plugin für <i>jQuery</i>, das den Umgang mit
        der CSS-Namenskonvention <i>BEM</i> <a href="#chapter-3-5">siehe 3.5</a>
        in JavaScript erleichtert.
    </li>
    <li>
        <code>mustache.js</code> <i>von Jan Lehnardt</i>:<br/>
        Eine sogenannte <i>Templating-Engine</i>, die es ermöglicht,
        mittels Vorlagen dynamisch HTML-Inhalt in die App einzufügen;
        der Name entstammt der Ähnlichkeit der angewandten Syntax
        <code>{{...}}</code> mit einem Schnurrbart.
    </li>
</ul>
<p>
    Was <i>OWLisch</i>, das bis zu diesem Punkt lediglich eine
    gewöhnliche Website oder Webapp ist, aber zu einer echten App
    macht, die auf <i>iOS</i>-Geräten installiert und theoretisch
    über den <i>Apple App-Store</i> heruntergeladen werden kann,
    ist das Framework <i>Cordova</i> von <i>The Apache Software
    Foundation</i>. Dabei handelt es sich um ein frei verfügbares
    Open-Source Framework, veröffentlicht unter der <i>Apache-2.0</i> Lizenz,
    das eine mit JavaScript, HTML und CSS programmierte Webapp als native
    App verpackt und dabei alle verbeiteten Plattformen und mobilen
    Betriebs-systeme wie <i>iOS</i>, <i>Android</i> und <i>Windows Phone</i>
    unterstützt.<!-- @import footnote-13 -->
</p>
<p>
    Die Installation und Ausführung von <i>Cordova</i> erfolgt dabei
    über die Java-Script-Laufzeitumgebung <i>node.js</i><!-- @import footnote-14 -->
    und dem darin enthaltenen Paketverwal-tungstool <i>NPM</i>
    (<i>Node Package Manager</i>). Im Falle von <i>OWLisch</i> wird durch
    dieses Framework ein Projekt für die Entwicklungsumgebung <i>Xcode</i>
    von <i>Apple</i> erzeugt, über die, in Kombination mit einem gültigen
    <i>Apple-Entwickler-Account</i>, die In-stallation auf einem <i>iPhone</i>
    oder das Ausführen in einem <i>iOS</i>-Emulator stattfinden kann (was
    jedoch nur auf dem <i>macOS</i> Betriebssystem funkioniert).
    Neben <i>Cordova</i> selbst wurden noch offizielle Plugins des selben
    Entwicklers für das Framework verwendet, die zusätzliche Funkionen
    innerhalb der App aktivieren:
</p>
<ol>
    <li><code>cordova-plugin-dialog</code></li>
    <li><code>cordova-plugin-keyboard</code></li>
    <li><code>cordova-plugin-statusbar</code></li>
</ol>
